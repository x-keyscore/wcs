.orbital {
    user-select: none;
    pointer-events: none;
    overflow: hidden;
}

.orbital > .layers {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    width: 100vw;
    height: 100vw;
    transform: rotateX(75deg);
    transform-style: preserve-3d;
}

@media (max-width: 767px) {
    .orbital > .layers:has(> .zoom:focus) {
        width: 400vw;
        height: 400vw;
    }
}

.orbital > .layers > .layer {
    --distance: calc((var(--distance-radius) / 100) * 80%);
    position: absolute;
    width: var(--distance);
    height: var(--distance);
    border: var(--secondary) 1px solid;
    border-radius: 50%;
    box-sizing: border-box;
    transform-style: preserve-3d;
    animation: rotate-layer 8000ms linear infinite;
}

.orbital > .layers > .layer > .picture {
    position: absolute;
    top: 50%;
    left: 0;
    animation: rotate-picture 8000ms linear infinite;
}
.orbital > .layers > .layer > .picture > img {
    --diameter: calc((var(--size-diameter) / 250000) * 20vw);
    position: absolute;
    top: calc(var(--diameter) / -2);
    left: calc(var(--diameter) / -2);
    width: var(--diameter);
    height: var(--diameter);
    border-radius: 50%;
}

/*
--distance-radius: %
--start-position: %
--size-diameter: km
--speed: km/h
*/
/*
.orbital .mercury { --distance-radius: 0.39; --size-diameter: 4880 }
.orbital .venus   { --distance-radius: 0.72; --size-diameter: 12104 }
.orbital .earth   { --distance-radius: 1.00; --size-diameter: 12742 }
.orbital .mars    { --distance-radius: 1.52; --size-diameter: 6779 }
.orbital .jupiter { --distance-radius: 5.20; --size-diameter: 139820 }*/
.orbital .saturn  { --distance-radius: 40; --size-diameter: 116460; --start-position: 0deg; }
.orbital .uranus  { --distance-radius: 70; --size-diameter: 50724; --start-position: 200deg;}
.orbital .neptune { --distance-radius: 100; --size-diameter: 49244; --start-position: 100deg; }
/*
@keyframes rotate-layer {
    from {
        transform: rotateZ(var(--start-position));
    }
    to {
        transform: rotateZ(calc(var(--start-position) - 360deg));
    }
}*/

@keyframes rotate-layer {
    from {
        transform: rotateZ(0deg);
    }
    to {
        transform: rotateZ(360deg);
    }
}

@keyframes rotate-picture {
    0% {
        transform: rotateX(-75deg) rotateY(0deg);
    }
    25% {
        transform: rotateX(-90deg) rotateY(90deg);
    }
    50% {
        transform: rotateX(-105deg) rotateY(180deg);
    }
    75% {
        transform: rotateX(-90deg) rotateY(270deg);
    }
    100% {
        transform: rotateX(-75deg) rotateY(360deg);
    }
}
